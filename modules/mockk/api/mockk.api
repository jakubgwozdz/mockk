public final class io/mockk/JVMMockKKt {
	public static final fun getDeclaringKotlinFile (Lkotlin/reflect/KFunction;)Lkotlin/reflect/KClass;
	public static final fun mockkStatic ([Lkotlin/reflect/KFunction;)V
	public static final fun mockkStatic ([Lkotlin/reflect/KFunction;Lkotlin/jvm/functions/Function0;)V
	public static final fun mockkStatic ([Lkotlin/reflect/KProperty;)V
	public static final fun mockkStatic ([Lkotlin/reflect/KProperty;Lkotlin/jvm/functions/Function0;)V
	public static final fun unmockkStatic ([Lkotlin/reflect/KFunction;)V
	public static final fun unmockkStatic ([Lkotlin/reflect/KProperty;)V
}

public final class io/mockk/MockK {
	public static final field INSTANCE Lio/mockk/MockK;
	public final fun useImpl (Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
}

public final class io/mockk/MockKAnnotations {
	public static final field INSTANCE Lio/mockk/MockKAnnotations;
	public final fun init ([Ljava/lang/Object;ZZZ)V
	public static synthetic fun init$default (Lio/mockk/MockKAnnotations;[Ljava/lang/Object;ZZZILjava/lang/Object;)V
}

public final class io/mockk/MockKKt {
	public static final fun checkUnnecessaryStub ([Ljava/lang/Object;)V
	public static final fun clearAllMocks (ZZZZZZZ)V
	public static synthetic fun clearAllMocks$default (ZZZZZZZILjava/lang/Object;)V
	public static final fun clearConstructorMockk ([Lkotlin/reflect/KClass;ZZZ)V
	public static synthetic fun clearConstructorMockk$default ([Lkotlin/reflect/KClass;ZZZILjava/lang/Object;)V
	public static final fun clearMocks (Ljava/lang/Object;[Ljava/lang/Object;ZZZZZ)V
	public static synthetic fun clearMocks$default (Ljava/lang/Object;[Ljava/lang/Object;ZZZZZILjava/lang/Object;)V
	public static final fun clearStaticMockk ([Lkotlin/reflect/KClass;ZZZ)V
	public static synthetic fun clearStaticMockk$default ([Lkotlin/reflect/KClass;ZZZILjava/lang/Object;)V
	public static final fun coEvery (Lkotlin/jvm/functions/Function2;)Lio/mockk/MockKStubScope;
	public static final fun coExcludeRecords (ZLkotlin/jvm/functions/Function2;)V
	public static synthetic fun coExcludeRecords$default (ZLkotlin/jvm/functions/Function2;ILjava/lang/Object;)V
	public static final fun coJustAwait (Lkotlin/jvm/functions/Function2;)Lio/mockk/MockKAdditionalAnswerScope;
	public static final fun coJustRun (Lkotlin/jvm/functions/Function2;)Lio/mockk/MockKAdditionalAnswerScope;
	public static final fun coVerify (Lio/mockk/Ordering;ZIIIJLkotlin/jvm/functions/Function2;)V
	public static synthetic fun coVerify$default (Lio/mockk/Ordering;ZIIIJLkotlin/jvm/functions/Function2;ILjava/lang/Object;)V
	public static final fun coVerifyAll (ZLkotlin/jvm/functions/Function2;)V
	public static synthetic fun coVerifyAll$default (ZLkotlin/jvm/functions/Function2;ILjava/lang/Object;)V
	public static final fun coVerifyOrder (ZLkotlin/jvm/functions/Function2;)V
	public static synthetic fun coVerifyOrder$default (ZLkotlin/jvm/functions/Function2;ILjava/lang/Object;)V
	public static final fun coVerifySequence (ZLkotlin/jvm/functions/Function2;)V
	public static synthetic fun coVerifySequence$default (ZLkotlin/jvm/functions/Function2;ILjava/lang/Object;)V
	public static final fun confirmVerified ([Ljava/lang/Object;)V
	public static final fun confirmVerifiedIgnoringGetters ([Ljava/lang/Object;)V
	public static final fun every (Lkotlin/jvm/functions/Function1;)Lio/mockk/MockKStubScope;
	public static final fun excludeRecords (ZLkotlin/jvm/functions/Function1;)V
	public static synthetic fun excludeRecords$default (ZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static final fun isMockKMock (Ljava/lang/Object;ZZZZZ)Z
	public static synthetic fun isMockKMock$default (Ljava/lang/Object;ZZZZZILjava/lang/Object;)Z
	public static final fun justRun (Lkotlin/jvm/functions/Function1;)Lio/mockk/MockKAdditionalAnswerScope;
	public static final fun mockkClass (Lkotlin/reflect/KClass;Ljava/lang/String;Z[Lkotlin/reflect/KClass;ZLkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static synthetic fun mockkClass$default (Lkotlin/reflect/KClass;Ljava/lang/String;Z[Lkotlin/reflect/KClass;ZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun mockkConstructor ([Lkotlin/reflect/KClass;ZZ)V
	public static final fun mockkConstructor ([Lkotlin/reflect/KClass;ZZLkotlin/jvm/functions/Function0;)V
	public static synthetic fun mockkConstructor$default ([Lkotlin/reflect/KClass;ZZILjava/lang/Object;)V
	public static synthetic fun mockkConstructor$default ([Lkotlin/reflect/KClass;ZZLkotlin/jvm/functions/Function0;ILjava/lang/Object;)V
	public static final fun mockkObject ([Ljava/lang/Object;Z)V
	public static final fun mockkObject ([Ljava/lang/Object;ZLkotlin/jvm/functions/Function0;)V
	public static synthetic fun mockkObject$default ([Ljava/lang/Object;ZILjava/lang/Object;)V
	public static synthetic fun mockkObject$default ([Ljava/lang/Object;ZLkotlin/jvm/functions/Function0;ILjava/lang/Object;)V
	public static final fun mockkStatic ([Ljava/lang/String;)V
	public static final fun mockkStatic ([Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V
	public static final fun mockkStatic ([Lkotlin/reflect/KClass;)V
	public static final fun mockkStatic ([Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function0;)V
	public static final fun unmockkAll ()V
	public static final fun unmockkConstructor ([Lkotlin/reflect/KClass;)V
	public static final fun unmockkObject ([Ljava/lang/Object;)V
	public static final fun unmockkStatic ([Ljava/lang/String;)V
	public static final fun unmockkStatic ([Lkotlin/reflect/KClass;)V
	public static final fun verify (Lio/mockk/Ordering;ZIIIJLkotlin/jvm/functions/Function1;)V
	public static synthetic fun verify$default (Lio/mockk/Ordering;ZIIIJLkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static final fun verifyAll (ZLkotlin/jvm/functions/Function1;)V
	public static synthetic fun verifyAll$default (ZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static final fun verifyOrder (ZLkotlin/jvm/functions/Function1;)V
	public static synthetic fun verifyOrder$default (ZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static final fun verifySequence (ZLkotlin/jvm/functions/Function1;)V
	public static synthetic fun verifySequence$default (ZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
}

public final class io/mockk/impl/InternalPlatform {
	public static final field INSTANCE Lio/mockk/impl/InternalPlatform;
	public final fun captureStackTrace ()Lkotlin/jvm/functions/Function0;
	public final fun copyFields (Ljava/lang/Object;Ljava/lang/Object;)V
	public final fun customComputeIfAbsent (Ljava/util/Map;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public final fun hkd (Ljava/lang/Object;)Ljava/lang/String;
	public final fun identityMap ()Ljava/util/Map;
	public final fun isPassedByValue (Lkotlin/reflect/KClass;)Z
	public final fun isRunningAndroidInstrumentationTest ()Z
	public final fun multiNotifier ()Lio/mockk/impl/MultiNotifier;
	public final fun packRef (Ljava/lang/Object;)Ljava/lang/Object;
	public final fun prettifyRecordingException (Ljava/lang/Throwable;)Ljava/lang/Throwable;
	public final fun ref (Ljava/lang/Object;)Lio/mockk/impl/Ref;
	public final fun synchronized (Ljava/lang/Object;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public final fun synchronizedMutableList ()Ljava/util/List;
	public final fun synchronizedMutableMap ()Ljava/util/Map;
	public final fun time ()J
	public final fun weakMap ()Ljava/util/Map;
	public final fun weakRef (Ljava/lang/Object;)Lio/mockk/impl/WeakRef;
}

public final class io/mockk/impl/JvmMockKGateway : io/mockk/MockKGateway {
	public static final field Companion Lio/mockk/impl/JvmMockKGateway$Companion;
	public fun <init> ()V
	public final fun getAnyValueGeneratorProvider ()Lkotlin/jvm/functions/Function0;
	public fun getCallRecorder ()Lio/mockk/MockKGateway$CallRecorder;
	public final fun getCallRecorderFactories ()Lio/mockk/impl/recording/CallRecorderFactories;
	public synthetic fun getClearer ()Lio/mockk/MockKGateway$Clearer;
	public fun getClearer ()Lio/mockk/impl/stub/CommonClearer;
	public synthetic fun getConstructorMockFactory ()Lio/mockk/MockKGateway$ConstructorMockFactory;
	public fun getConstructorMockFactory ()Lio/mockk/impl/instantiation/JvmConstructorMockFactory;
	public fun getExcluder ()Lio/mockk/MockKGateway$Excluder;
	public final fun getGatewayAccess ()Lio/mockk/impl/stub/StubGatewayAccess;
	public final fun getGatewayAccessWithFactory ()Lio/mockk/impl/stub/StubGatewayAccess;
	public fun getInstanceFactoryRegistry ()Lio/mockk/MockKGateway$InstanceFactoryRegistry;
	public final fun getInstantiator ()Lio/mockk/impl/instantiation/JvmInstantiator;
	public synthetic fun getMockFactory ()Lio/mockk/MockKGateway$MockFactory;
	public fun getMockFactory ()Lio/mockk/impl/instantiation/AbstractMockFactory;
	public synthetic fun getMockInitializer ()Lio/mockk/MockKGateway$MockInitializer;
	public fun getMockInitializer ()Lio/mockk/impl/annotations/JvmMockInitializer;
	public synthetic fun getMockTypeChecker ()Lio/mockk/MockKGateway$MockTypeChecker;
	public fun getMockTypeChecker ()Lio/mockk/impl/instantiation/JvmMockTypeChecker;
	public synthetic fun getObjectMockFactory ()Lio/mockk/MockKGateway$ObjectMockFactory;
	public fun getObjectMockFactory ()Lio/mockk/impl/instantiation/JvmObjectMockFactory;
	public final fun getSafeToString ()Lio/mockk/impl/log/SafeToString;
	public final fun getSignatureValueGenerator ()Lio/mockk/impl/recording/JvmSignatureValueGenerator;
	public synthetic fun getStaticMockFactory ()Lio/mockk/MockKGateway$StaticMockFactory;
	public fun getStaticMockFactory ()Lio/mockk/impl/instantiation/JvmStaticMockFactory;
	public final fun getStubRepo ()Lio/mockk/impl/stub/StubRepository;
	public fun getStubber ()Lio/mockk/MockKGateway$Stubber;
	public synthetic fun getVerificationAcknowledger ()Lio/mockk/MockKGateway$VerificationAcknowledger;
	public fun getVerificationAcknowledger ()Lio/mockk/impl/recording/CommonVerificationAcknowledger;
	public fun getVerifier ()Lio/mockk/MockKGateway$Verifier;
	public fun verifier (Lio/mockk/MockKGateway$VerificationParameters;)Lio/mockk/MockKGateway$CallVerifier;
}

public final class io/mockk/impl/JvmMockKGateway$Companion {
	public final fun getAnyValueGeneratorFactory ()Lkotlin/jvm/functions/Function1;
	public final fun getDefaultImplementation ()Lio/mockk/impl/JvmMockKGateway;
	public final fun getDefaultImplementationBuilder ()Lkotlin/jvm/functions/Function0;
	public final fun setAnyValueGeneratorFactory (Lkotlin/jvm/functions/Function1;)V
}

public final class io/mockk/impl/JvmMultiNotifier : io/mockk/impl/MultiNotifier {
	public fun <init> ()V
	public final fun getCondition ()Ljava/util/concurrent/locks/Condition;
	public final fun getConditionMet ()Ljava/util/Set;
	public final fun getCounters ()Ljava/util/Map;
	public final fun getLock ()Ljava/util/concurrent/locks/ReentrantLock;
	public fun notify (Ljava/lang/Object;)V
	public fun openSession (Ljava/util/List;J)Lio/mockk/impl/MultiNotifier$Session;
}

public final class io/mockk/impl/JvmMultiNotifier$SessionImpl : io/mockk/impl/MultiNotifier$Session {
	public fun <init> (Lio/mockk/impl/JvmMultiNotifier;JJLjava/util/List;)V
	public fun close ()V
	public fun wait ()Z
}

public abstract interface class io/mockk/impl/MultiNotifier {
	public abstract fun notify (Ljava/lang/Object;)V
	public abstract fun openSession (Ljava/util/List;J)Lio/mockk/impl/MultiNotifier$Session;
}

public abstract interface class io/mockk/impl/MultiNotifier$Session {
	public abstract fun close ()V
	public abstract fun wait ()Z
}

public abstract interface class io/mockk/impl/Ref {
	public abstract fun getValue ()Ljava/lang/Object;
}

public abstract interface class io/mockk/impl/WeakRef {
	public abstract fun getValue ()Ljava/lang/Object;
}

public abstract interface annotation class io/mockk/impl/annotations/AdditionalInterface : java/lang/annotation/Annotation {
	public abstract fun type ()Ljava/lang/Class;
}

public abstract interface annotation class io/mockk/impl/annotations/InjectMockKs : java/lang/annotation/Annotation {
	public abstract fun injectImmutable ()Z
	public abstract fun lookupType ()Lio/mockk/impl/annotations/InjectionLookupType;
	public abstract fun overrideValues ()Z
}

public final class io/mockk/impl/annotations/InjectionLookupType : java/lang/Enum {
	public static final field BOTH Lio/mockk/impl/annotations/InjectionLookupType;
	public static final field BY_NAME Lio/mockk/impl/annotations/InjectionLookupType;
	public static final field BY_TYPE Lio/mockk/impl/annotations/InjectionLookupType;
	public final fun getByName ()Z
	public final fun getByType ()Z
	public static fun valueOf (Ljava/lang/String;)Lio/mockk/impl/annotations/InjectionLookupType;
	public static fun values ()[Lio/mockk/impl/annotations/InjectionLookupType;
}

public final class io/mockk/impl/annotations/JvmMockInitializer : io/mockk/MockKGateway$MockInitializer {
	public static final field Companion Lio/mockk/impl/annotations/JvmMockInitializer$Companion;
	public fun <init> (Lio/mockk/MockKGateway;)V
	public final fun getGateway ()Lio/mockk/MockKGateway;
	public fun initAnnotatedMocks (Ljava/util/List;ZZZ)V
	public final fun initMock (Ljava/lang/Object;ZZZ)V
}

public final class io/mockk/impl/annotations/JvmMockInitializer$Companion {
}

public final class io/mockk/impl/annotations/MockInjector {
	public fun <init> (Ljava/lang/Object;Lio/mockk/impl/annotations/InjectionLookupType;ZZ)V
	public final fun constructorInjection (Lkotlin/reflect/KClass;)Ljava/lang/Object;
	public final fun getInjectImmutable ()Z
	public final fun getLookupType ()Lio/mockk/impl/annotations/InjectionLookupType;
	public final fun getMockHolder ()Ljava/lang/Object;
	public final fun getOverrideValues ()Z
	public final fun propertiesInjection (Ljava/lang/Object;)V
}

public abstract interface annotation class io/mockk/impl/annotations/MockK : java/lang/annotation/Annotation {
	public abstract fun name ()Ljava/lang/String;
	public abstract fun relaxUnitFun ()Z
	public abstract fun relaxed ()Z
}

public abstract interface annotation class io/mockk/impl/annotations/OverrideMockKs : java/lang/annotation/Annotation {
	public abstract fun injectImmutable ()Z
	public abstract fun lookupType ()Lio/mockk/impl/annotations/InjectionLookupType;
}

public abstract interface annotation class io/mockk/impl/annotations/RelaxedMockK : java/lang/annotation/Annotation {
	public abstract fun name ()Ljava/lang/String;
}

public abstract interface annotation class io/mockk/impl/annotations/SpyK : java/lang/annotation/Annotation {
	public abstract fun name ()Ljava/lang/String;
	public abstract fun recordPrivateCalls ()Z
}

public final class io/mockk/impl/eval/EveryBlockEvaluator : io/mockk/impl/eval/RecordedBlockEvaluator, io/mockk/MockKGateway$Stubber {
	public fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;)V
	public fun every (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)Lio/mockk/MockKStubScope;
}

public final class io/mockk/impl/eval/ExcludeBlockEvaluator : io/mockk/impl/eval/RecordedBlockEvaluator, io/mockk/MockKGateway$Excluder {
	public fun <init> (Lkotlin/jvm/functions/Function0;Lio/mockk/impl/stub/StubRepository;Lkotlin/jvm/functions/Function0;)V
	public fun exclude (Lio/mockk/MockKGateway$ExclusionParameters;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)V
	public final fun getStubRepo ()Lio/mockk/impl/stub/StubRepository;
}

public abstract class io/mockk/impl/eval/RecordedBlockEvaluator {
	public fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;)V
	public final fun getAutoHinterFactory ()Lkotlin/jvm/functions/Function0;
	public final fun getCallRecorder ()Lkotlin/jvm/functions/Function0;
	protected final fun initializeCoroutines ()V
	public final fun record (Lio/mockk/MockKMatcherScope;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)V
}

public final class io/mockk/impl/eval/VerifyBlockEvaluator : io/mockk/impl/eval/RecordedBlockEvaluator, io/mockk/MockKGateway$Verifier {
	public fun <init> (Lkotlin/jvm/functions/Function0;Lio/mockk/impl/stub/StubRepository;Lkotlin/jvm/functions/Function0;)V
	public final fun getStubRepo ()Lio/mockk/impl/stub/StubRepository;
	public fun verify (Lio/mockk/MockKGateway$VerificationParameters;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)V
}

public abstract class io/mockk/impl/instantiation/AbstractInstantiator {
	public static final field Companion Lio/mockk/impl/instantiation/AbstractInstantiator$Companion;
	public fun <init> (Lio/mockk/impl/instantiation/CommonInstanceFactoryRegistry;)V
	public final fun getInstanceFactoryRegistry ()Lio/mockk/impl/instantiation/CommonInstanceFactoryRegistry;
	public abstract fun instantiate (Lkotlin/reflect/KClass;)Ljava/lang/Object;
	public final fun instantiateViaInstanceFactoryRegistry (Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
}

public final class io/mockk/impl/instantiation/AbstractInstantiator$Companion {
	public final fun getLog ()Lio/mockk/impl/log/Logger;
}

public abstract class io/mockk/impl/instantiation/AbstractMockFactory : io/mockk/MockKGateway$MockFactory {
	public static final field Companion Lio/mockk/impl/instantiation/AbstractMockFactory$Companion;
	public fun <init> (Lio/mockk/impl/stub/StubRepository;Lio/mockk/impl/instantiation/AbstractInstantiator;Lio/mockk/impl/stub/StubGatewayAccess;)V
	public final fun getGatewayAccess ()Lio/mockk/impl/stub/StubGatewayAccess;
	public final fun getInstantiator ()Lio/mockk/impl/instantiation/AbstractInstantiator;
	public final fun getLog ()Lio/mockk/impl/log/Logger;
	public final fun getSafeToString ()Lio/mockk/impl/log/SafeToString;
	public final fun getStubRepository ()Lio/mockk/impl/stub/StubRepository;
	public fun isMock (Ljava/lang/Object;)Z
	public fun mockk (Lkotlin/reflect/KClass;Ljava/lang/String;Z[Lkotlin/reflect/KClass;Z)Ljava/lang/Object;
	public abstract fun newProxy (Lkotlin/reflect/KClass;[Lkotlin/reflect/KClass;Lio/mockk/impl/stub/Stub;ZZ)Ljava/lang/Object;
	public static synthetic fun newProxy$default (Lio/mockk/impl/instantiation/AbstractMockFactory;Lkotlin/reflect/KClass;[Lkotlin/reflect/KClass;Lio/mockk/impl/stub/Stub;ZZILjava/lang/Object;)Ljava/lang/Object;
	public fun spyk (Lkotlin/reflect/KClass;Ljava/lang/Object;Ljava/lang/String;[Lkotlin/reflect/KClass;Z)Ljava/lang/Object;
	public fun temporaryMock (Lkotlin/reflect/KClass;)Ljava/lang/Object;
}

public final class io/mockk/impl/instantiation/AbstractMockFactory$Companion {
	public final fun getIdCounter ()Lio/mockk/InternalCounter;
	public final fun newId ()J
}

public class io/mockk/impl/instantiation/AnyValueGenerator {
	public fun <init> ()V
	public fun anyValue (Lkotlin/reflect/KClass;ZLkotlin/jvm/functions/Function0;)Ljava/lang/Object;
}

public final class io/mockk/impl/instantiation/CommonInstanceFactoryRegistry : io/mockk/MockKGateway$InstanceFactoryRegistry {
	public fun <init> ()V
	public fun deregisterFactory (Lio/mockk/MockKGateway$InstanceFactory;)V
	public final fun getInstanceFactories ()Ljava/util/List;
	public fun registerFactory (Lio/mockk/MockKGateway$InstanceFactory;)V
}

public class io/mockk/impl/instantiation/CommonMockTypeChecker : io/mockk/MockKGateway$MockTypeChecker {
	public fun <init> (Lio/mockk/impl/stub/StubRepository;Lkotlin/jvm/functions/Function1;)V
	public final fun getStubRepository ()Lio/mockk/impl/stub/StubRepository;
	public fun isConstructorMock (Ljava/lang/Object;)Z
	public final fun isConstructorMockFun ()Lkotlin/jvm/functions/Function1;
	public fun isObjectMock (Ljava/lang/Object;)Z
	public fun isRegularMock (Ljava/lang/Object;)Z
	public fun isSpy (Ljava/lang/Object;)Z
	public fun isStaticMock (Ljava/lang/Object;)Z
}

public class io/mockk/impl/instantiation/JvmAnyValueGenerator : io/mockk/impl/instantiation/AnyValueGenerator {
	public fun <init> (Ljava/lang/Object;)V
	public fun anyValue (Lkotlin/reflect/KClass;ZLkotlin/jvm/functions/Function0;)Ljava/lang/Object;
}

public final class io/mockk/impl/instantiation/JvmConstructorMockFactory : io/mockk/MockKGateway$ConstructorMockFactory {
	public fun <init> (Lio/mockk/proxy/MockKConstructorProxyMaker;Lio/mockk/impl/stub/CommonClearer;Lio/mockk/impl/instantiation/AbstractMockFactory;Lio/mockk/proxy/MockKProxyMaker;Lio/mockk/impl/stub/StubGatewayAccess;)V
	public fun clear (Lkotlin/reflect/KClass;Lio/mockk/MockKGateway$ClearOptions;)V
	public fun clearAll (Lio/mockk/MockKGateway$ClearOptions;)V
	public fun constructorMockk (Lkotlin/reflect/KClass;ZZ)Lkotlin/jvm/functions/Function0;
	public final fun getClearer ()Lio/mockk/impl/stub/CommonClearer;
	public final fun getConstructorProxyMaker ()Lio/mockk/proxy/MockKConstructorProxyMaker;
	public final fun getGatewayAccess ()Lio/mockk/impl/stub/StubGatewayAccess;
	public final fun getHandlers ()Ljava/util/WeakHashMap;
	public final fun getLog ()Lio/mockk/impl/log/Logger;
	public final fun getMockFactory ()Lio/mockk/impl/instantiation/AbstractMockFactory;
	public final fun getObjectProxyMaker ()Lio/mockk/proxy/MockKProxyMaker;
	public final fun isMock (Lkotlin/reflect/KClass;)Z
	public fun mockPlaceholder (Lkotlin/reflect/KClass;[Lio/mockk/Matcher;)Ljava/lang/Object;
}

public final class io/mockk/impl/instantiation/JvmConstructorMockFactory$ConstructorInvocationHandler : io/mockk/proxy/MockKInvocationHandler {
	public fun <init> (Lio/mockk/impl/instantiation/JvmConstructorMockFactory;Lkotlin/reflect/KClass;)V
	public final fun getCls ()Lkotlin/reflect/KClass;
	public final fun getConstructorMockVariant ()Lio/mockk/impl/instantiation/JvmConstructorMockFactory$ConstructorMockVariant;
	public fun invocation (Ljava/lang/Object;Ljava/lang/reflect/Method;Ljava/util/concurrent/Callable;[Ljava/lang/Object;)Ljava/lang/Object;
	public final fun push (ZZ)Lkotlin/jvm/functions/Function0;
}

public final class io/mockk/impl/instantiation/JvmConstructorMockFactory$ConstructorMock {
	public fun <init> (Lio/mockk/impl/instantiation/JvmConstructorMockFactory;Lkotlin/reflect/KClass;ZLjava/lang/String;)V
	public synthetic fun <init> (Lio/mockk/impl/instantiation/JvmConstructorMockFactory;Lkotlin/reflect/KClass;ZLjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun dispose ()V
	public final fun getCancellations ()Ljava/util/List;
	public final fun getCls ()Lkotlin/reflect/KClass;
	public final fun getName ()Ljava/lang/String;
	public final fun getRecordPrivateCalls ()Z
	public final fun getRepresentativeMock ()Ljava/lang/Object;
	public final fun getRepresentativeStub ()Lio/mockk/impl/stub/SpyKStub;
}

public final class io/mockk/impl/instantiation/JvmConstructorMockFactory$ConstructorMockVariant {
	public fun <init> (Lio/mockk/impl/instantiation/JvmConstructorMockFactory;Lkotlin/reflect/KClass;Z)V
	public final fun clear (Lio/mockk/MockKGateway$ClearOptions;)V
	public final fun dispose ()V
	public final fun getCls ()Lkotlin/reflect/KClass;
	public final fun getMock ([Ljava/lang/Object;)Lio/mockk/impl/instantiation/JvmConstructorMockFactory$ConstructorMock;
	public final fun getRepresentative ([Lio/mockk/Matcher;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
}

public final class io/mockk/impl/instantiation/JvmInstantiator : io/mockk/impl/instantiation/AbstractInstantiator {
	public static final field Companion Lio/mockk/impl/instantiation/JvmInstantiator$Companion;
	public fun <init> (Lio/mockk/proxy/MockKInstantiatior;Lio/mockk/impl/instantiation/CommonInstanceFactoryRegistry;)V
	public fun instantiate (Lkotlin/reflect/KClass;)Ljava/lang/Object;
}

public final class io/mockk/impl/instantiation/JvmInstantiator$Companion {
	public final fun getLog ()Lio/mockk/impl/log/Logger;
}

public final class io/mockk/impl/instantiation/JvmMockFactory : io/mockk/impl/instantiation/AbstractMockFactory {
	public fun <init> (Lio/mockk/proxy/MockKProxyMaker;Lio/mockk/impl/instantiation/JvmInstantiator;Lio/mockk/impl/stub/StubRepository;Lio/mockk/impl/stub/StubGatewayAccess;)V
	public final fun getProxyMaker ()Lio/mockk/proxy/MockKProxyMaker;
	public fun newProxy (Lkotlin/reflect/KClass;[Lkotlin/reflect/KClass;Lio/mockk/impl/stub/Stub;ZZ)Ljava/lang/Object;
}

public final class io/mockk/impl/instantiation/JvmMockFactoryHelper {
	public static final field INSTANCE Lio/mockk/impl/instantiation/JvmMockFactoryHelper;
	public final fun getCache ()Ljava/util/Map;
	public final fun isEquals (Ljava/lang/reflect/Method;)Z
	public final fun isHashCode (Ljava/lang/reflect/Method;)Z
	public final fun mockHandler (Lio/mockk/impl/stub/Stub;)Lio/mockk/proxy/MockKInvocationHandler;
}

public final class io/mockk/impl/instantiation/JvmMockTypeChecker : io/mockk/impl/instantiation/CommonMockTypeChecker {
	public fun <init> (Lio/mockk/impl/stub/StubRepository;Lkotlin/jvm/functions/Function1;)V
	public fun isConstructorMock (Ljava/lang/Object;)Z
	public fun isStaticMock (Ljava/lang/Object;)Z
}

public final class io/mockk/impl/instantiation/JvmObjectMockFactory : io/mockk/MockKGateway$ObjectMockFactory {
	public static final field Companion Lio/mockk/impl/instantiation/JvmObjectMockFactory$Companion;
	public fun <init> (Lio/mockk/proxy/MockKProxyMaker;Lio/mockk/impl/stub/StubRepository;Lio/mockk/impl/stub/StubGatewayAccess;)V
	public fun clear (Ljava/lang/Object;Lio/mockk/MockKGateway$ClearOptions;)V
	public fun clearAll (Lio/mockk/MockKGateway$ClearOptions;)V
	public final fun getGatewayAccess ()Lio/mockk/impl/stub/StubGatewayAccess;
	public final fun getProxyMaker ()Lio/mockk/proxy/MockKProxyMaker;
	public final fun getRefCntMap ()Lio/mockk/impl/instantiation/RefCounterMap;
	public final fun getStubRepository ()Lio/mockk/impl/stub/StubRepository;
	public fun objectMockk (Ljava/lang/Object;Z)Lkotlin/jvm/functions/Function0;
}

public final class io/mockk/impl/instantiation/JvmObjectMockFactory$Companion {
	public final fun getLog ()Lio/mockk/impl/log/Logger;
}

public final class io/mockk/impl/instantiation/JvmStaticMockFactory : io/mockk/MockKGateway$StaticMockFactory {
	public static final field Companion Lio/mockk/impl/instantiation/JvmStaticMockFactory$Companion;
	public fun <init> (Lio/mockk/proxy/MockKStaticProxyMaker;Lio/mockk/impl/stub/StubRepository;Lio/mockk/impl/stub/StubGatewayAccess;)V
	public fun clear (Lkotlin/reflect/KClass;Lio/mockk/MockKGateway$ClearOptions;)V
	public fun clearAll (Lio/mockk/MockKGateway$ClearOptions;)V
	public final fun getGatewayAccess ()Lio/mockk/impl/stub/StubGatewayAccess;
	public final fun getProxyMaker ()Lio/mockk/proxy/MockKStaticProxyMaker;
	public final fun getRefCntMap ()Lio/mockk/impl/instantiation/RefCounterMap;
	public final fun getStubRepository ()Lio/mockk/impl/stub/StubRepository;
	public fun staticMockk (Lkotlin/reflect/KClass;)Lkotlin/jvm/functions/Function0;
}

public final class io/mockk/impl/instantiation/JvmStaticMockFactory$Companion {
	public final fun getLog ()Lio/mockk/impl/log/Logger;
}

public final class io/mockk/impl/instantiation/RefCounterMap {
	public fun <init> ()V
	public final fun decrementRefCnt (Ljava/lang/Object;)Z
	public final fun getCounter ()Ljava/util/WeakHashMap;
	public final fun incrementRefCnt (Ljava/lang/Object;)Z
}

public final class io/mockk/impl/log/FilterLogger : io/mockk/impl/log/Logger {
	public fun <init> (Lio/mockk/impl/log/Logger;Lkotlin/jvm/functions/Function0;)V
	public fun debug (Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public fun debug (Lkotlin/jvm/functions/Function0;)V
	public fun error (Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public fun error (Lkotlin/jvm/functions/Function0;)V
	public final fun getLogLevel ()Lkotlin/jvm/functions/Function0;
	public final fun getLogger ()Lio/mockk/impl/log/Logger;
	public fun info (Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public fun info (Lkotlin/jvm/functions/Function0;)V
	public fun trace (Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public fun trace (Lkotlin/jvm/functions/Function0;)V
	public fun warn (Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public fun warn (Lkotlin/jvm/functions/Function0;)V
}

public final class io/mockk/impl/log/JULLogger : io/mockk/impl/log/Logger {
	public fun <init> (Lkotlin/reflect/KClass;)V
	public fun debug (Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public fun debug (Lkotlin/jvm/functions/Function0;)V
	public fun error (Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public fun error (Lkotlin/jvm/functions/Function0;)V
	public final fun getLog ()Ljava/util/logging/Logger;
	public fun info (Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public fun info (Lkotlin/jvm/functions/Function0;)V
	public fun trace (Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public fun trace (Lkotlin/jvm/functions/Function0;)V
	public fun warn (Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public fun warn (Lkotlin/jvm/functions/Function0;)V
}

public final class io/mockk/impl/log/JvmLogging {
	public static final field INSTANCE Lio/mockk/impl/log/JvmLogging;
	public final fun adaptor (Lio/mockk/impl/log/Logger;)Lio/mockk/proxy/MockKAgentLogger;
	public final fun slf4jOrJulLogging ()Lkotlin/jvm/functions/Function1;
}

public final class io/mockk/impl/log/LogLevel : java/lang/Enum {
	public static final field DEBUG Lio/mockk/impl/log/LogLevel;
	public static final field DISABLED Lio/mockk/impl/log/LogLevel;
	public static final field ERROR Lio/mockk/impl/log/LogLevel;
	public static final field INFO Lio/mockk/impl/log/LogLevel;
	public static final field TRACE Lio/mockk/impl/log/LogLevel;
	public static final field WARN Lio/mockk/impl/log/LogLevel;
	public static fun valueOf (Ljava/lang/String;)Lio/mockk/impl/log/LogLevel;
	public static fun values ()[Lio/mockk/impl/log/LogLevel;
}

public abstract interface class io/mockk/impl/log/Logger {
	public static final field Companion Lio/mockk/impl/log/Logger$Companion;
	public abstract fun debug (Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public abstract fun debug (Lkotlin/jvm/functions/Function0;)V
	public abstract fun error (Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public abstract fun error (Lkotlin/jvm/functions/Function0;)V
	public abstract fun info (Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public abstract fun info (Lkotlin/jvm/functions/Function0;)V
	public abstract fun trace (Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public abstract fun trace (Lkotlin/jvm/functions/Function0;)V
	public abstract fun warn (Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public abstract fun warn (Lkotlin/jvm/functions/Function0;)V
}

public final class io/mockk/impl/log/Logger$Companion {
	public final fun getLoggerFactory ()Lkotlin/jvm/functions/Function1;
	public final fun setLoggerFactory (Lkotlin/jvm/functions/Function1;)V
}

public final class io/mockk/impl/log/NoOpLogger : io/mockk/impl/log/Logger {
	public fun <init> ()V
	public fun debug (Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public fun debug (Lkotlin/jvm/functions/Function0;)V
	public fun error (Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public fun error (Lkotlin/jvm/functions/Function0;)V
	public fun info (Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public fun info (Lkotlin/jvm/functions/Function0;)V
	public fun trace (Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public fun trace (Lkotlin/jvm/functions/Function0;)V
	public fun warn (Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public fun warn (Lkotlin/jvm/functions/Function0;)V
}

public final class io/mockk/impl/log/SafeLogger : io/mockk/impl/log/Logger {
	public fun <init> (Lio/mockk/impl/log/Logger;Lkotlin/jvm/functions/Function0;)V
	public fun debug (Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public fun debug (Lkotlin/jvm/functions/Function0;)V
	public fun error (Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public fun error (Lkotlin/jvm/functions/Function0;)V
	public final fun getCallRecorderGetter ()Lkotlin/jvm/functions/Function0;
	public final fun getLogger ()Lio/mockk/impl/log/Logger;
	public fun info (Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public fun info (Lkotlin/jvm/functions/Function0;)V
	public fun trace (Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public fun trace (Lkotlin/jvm/functions/Function0;)V
	public fun warn (Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public fun warn (Lkotlin/jvm/functions/Function0;)V
}

public final class io/mockk/impl/log/SafeToString {
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public final fun exec (Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public final fun getCallrecorderGetter ()Lkotlin/jvm/functions/Function0;
	public final fun invoke (Lio/mockk/impl/log/Logger;)Lio/mockk/impl/log/Logger;
}

public final class io/mockk/impl/log/Slf4jLogger : io/mockk/impl/log/Logger {
	public fun <init> (Lkotlin/reflect/KClass;)V
	public fun debug (Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public fun debug (Lkotlin/jvm/functions/Function0;)V
	public fun error (Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public fun error (Lkotlin/jvm/functions/Function0;)V
	public final fun getLog ()Lorg/slf4j/Logger;
	public fun info (Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public fun info (Lkotlin/jvm/functions/Function0;)V
	public fun trace (Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public fun trace (Lkotlin/jvm/functions/Function0;)V
	public fun warn (Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public fun warn (Lkotlin/jvm/functions/Function0;)V
}

public final class io/mockk/impl/platform/CommonIdentityHashMapOf : java/util/Map, kotlin/jvm/internal/markers/KMutableMap {
	public fun <init> ()V
	public fun clear ()V
	public fun containsKey (Ljava/lang/Object;)Z
	public fun containsValue (Ljava/lang/Object;)Z
	public final fun entrySet ()Ljava/util/Set;
	public fun get (Ljava/lang/Object;)Ljava/lang/Object;
	public fun getEntries ()Ljava/util/Set;
	public fun getKeys ()Ljava/util/Set;
	public final fun getMap ()Ljava/util/LinkedHashMap;
	public fun getSize ()I
	public fun getValues ()Ljava/util/Collection;
	public fun isEmpty ()Z
	public final fun keySet ()Ljava/util/Set;
	public fun put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun putAll (Ljava/util/Map;)V
	public fun remove (Ljava/lang/Object;)Ljava/lang/Object;
	public final fun size ()I
	public final fun values ()Ljava/util/Collection;
}

public final class io/mockk/impl/platform/CommonRef : io/mockk/impl/Ref {
	public fun <init> (Ljava/lang/Object;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/mockk/impl/platform/Disposable {
	public abstract fun dispose ()V
}

public final class io/mockk/impl/platform/JvmWeakConcurrentMap : java/util/Map, kotlin/jvm/internal/markers/KMutableMap {
	public fun <init> ()V
	public fun clear ()V
	public fun containsKey (Ljava/lang/Object;)Z
	public fun containsValue (Ljava/lang/Object;)Z
	public final fun entrySet ()Ljava/util/Set;
	public fun get (Ljava/lang/Object;)Ljava/lang/Object;
	public fun getEntries ()Ljava/util/Set;
	public fun getKeys ()Ljava/util/Set;
	public fun getSize ()I
	public fun getValues ()Ljava/util/Collection;
	public fun isEmpty ()Z
	public final fun keySet ()Ljava/util/Set;
	public fun put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun putAll (Ljava/util/Map;)V
	public fun remove (Ljava/lang/Object;)Ljava/lang/Object;
	public final fun size ()I
	public final fun values ()Ljava/util/Collection;
}

public class io/mockk/impl/recording/AutoHinter {
	public fun <init> ()V
	public fun autoHint (Lio/mockk/MockKGateway$CallRecorder;IILkotlin/jvm/functions/Function0;)V
}

public final class io/mockk/impl/recording/CallRecorderFactories {
	public fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)V
	public final fun component1 ()Lkotlin/jvm/functions/Function0;
	public final fun component10 ()Lkotlin/jvm/functions/Function2;
	public final fun component11 ()Lkotlin/jvm/functions/Function1;
	public final fun component12 ()Lkotlin/jvm/functions/Function1;
	public final fun component2 ()Lkotlin/jvm/functions/Function0;
	public final fun component3 ()Lkotlin/jvm/functions/Function0;
	public final fun component4 ()Lkotlin/jvm/functions/Function1;
	public final fun component5 ()Lkotlin/jvm/functions/Function0;
	public final fun component6 ()Lkotlin/jvm/functions/Function0;
	public final fun component7 ()Lkotlin/jvm/functions/Function1;
	public final fun component8 ()Lkotlin/jvm/functions/Function1;
	public final fun component9 ()Lkotlin/jvm/functions/Function2;
	public final fun copy (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lio/mockk/impl/recording/CallRecorderFactories;
	public static synthetic fun copy$default (Lio/mockk/impl/recording/CallRecorderFactories;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/mockk/impl/recording/CallRecorderFactories;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAnsweringState ()Lkotlin/jvm/functions/Function1;
	public final fun getCallRoundBuilder ()Lkotlin/jvm/functions/Function0;
	public final fun getChildHinter ()Lkotlin/jvm/functions/Function0;
	public final fun getExclusionState ()Lkotlin/jvm/functions/Function2;
	public final fun getPermanentMocker ()Lkotlin/jvm/functions/Function0;
	public final fun getSafeLoggingState ()Lkotlin/jvm/functions/Function1;
	public final fun getSignatureMatcherDetector ()Lkotlin/jvm/functions/Function0;
	public final fun getStubbingAwaitingAnswerState ()Lkotlin/jvm/functions/Function1;
	public final fun getStubbingState ()Lkotlin/jvm/functions/Function1;
	public final fun getVerificationCallSorter ()Lkotlin/jvm/functions/Function0;
	public final fun getVerifier ()Lkotlin/jvm/functions/Function1;
	public final fun getVerifyingState ()Lkotlin/jvm/functions/Function2;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/mockk/impl/recording/CallRound {
	public fun <init> (Ljava/util/List;Ljava/util/List;)V
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;Ljava/util/List;)Lio/mockk/impl/recording/CallRound;
	public static synthetic fun copy$default (Lio/mockk/impl/recording/CallRound;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Lio/mockk/impl/recording/CallRound;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCalls ()Ljava/util/List;
	public final fun getMatchers ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/mockk/impl/recording/CallRoundBuilder {
	public fun <init> (Lio/mockk/impl/log/SafeToString;)V
	public final fun addMatcher (Lio/mockk/Matcher;Ljava/lang/Object;)V
	public final fun addSignedCall (Ljava/lang/Object;ZLkotlin/reflect/KClass;Lio/mockk/Invocation;)V
	public final fun addWasNotCalled (Ljava/util/List;)V
	public final fun build ()Lio/mockk/impl/recording/CallRound;
	public final fun getSafeToString ()Lio/mockk/impl/log/SafeToString;
	public final fun getSignedCalls ()Ljava/util/List;
	public final fun getSignedMatchers ()Ljava/util/List;
}

public final class io/mockk/impl/recording/ChainedCallDetector {
	public static final field Companion Lio/mockk/impl/recording/ChainedCallDetector$Companion;
	public field call Lio/mockk/RecordedCall;
	public fun <init> (Lio/mockk/impl/log/SafeToString;)V
	public final fun detect (Ljava/util/List;ILjava/util/HashMap;)V
	public final fun getArgMatchers ()Ljava/util/List;
	public final fun getCall ()Lio/mockk/RecordedCall;
	public final fun getLog ()Lio/mockk/impl/log/Logger;
	public final fun setCall (Lio/mockk/RecordedCall;)V
}

public final class io/mockk/impl/recording/ChainedCallDetector$Companion {
	public final fun eqOrNullMatcher (Ljava/lang/Object;)Lio/mockk/Matcher;
}

public final class io/mockk/impl/recording/ChildHinter {
	public fun <init> ()V
	public final fun hint (ILkotlin/reflect/KClass;)V
	public final fun nextChildType (Lkotlin/jvm/functions/Function0;)Lkotlin/reflect/KClass;
}

public final class io/mockk/impl/recording/CommonCallRecorder : io/mockk/MockKGateway$CallRecorder {
	public static final field Companion Lio/mockk/impl/recording/CommonCallRecorder$Companion;
	public fun <init> (Lio/mockk/impl/stub/StubRepository;Lio/mockk/impl/instantiation/AbstractInstantiator;Lio/mockk/impl/recording/SignatureValueGenerator;Lio/mockk/MockKGateway$MockFactory;Lkotlin/jvm/functions/Function0;Lio/mockk/impl/log/SafeToString;Lio/mockk/impl/recording/CallRecorderFactories;Lkotlin/jvm/functions/Function1;Lio/mockk/MockKGateway$VerificationAcknowledger;)V
	public fun answerOpportunity ()Lio/mockk/MockKGateway$AnswerOpportunity;
	public fun call (Lio/mockk/Invocation;)Ljava/lang/Object;
	public fun discardLastCallRound ()V
	public fun done ()V
	public fun estimateCallRounds ()I
	public final fun getAck ()Lio/mockk/MockKGateway$VerificationAcknowledger;
	public final fun getAnyValueGenerator ()Lkotlin/jvm/functions/Function0;
	public fun getCalls ()Ljava/util/List;
	public final fun getChildHinter ()Lio/mockk/impl/recording/ChildHinter;
	public final fun getFactories ()Lio/mockk/impl/recording/CallRecorderFactories;
	public final fun getInitialState ()Lkotlin/jvm/functions/Function1;
	public final fun getInstantiator ()Lio/mockk/impl/instantiation/AbstractInstantiator;
	public final fun getMockFactory ()Lio/mockk/MockKGateway$MockFactory;
	public final fun getSafeToString ()Lio/mockk/impl/log/SafeToString;
	public final fun getSignatureValueGenerator ()Lio/mockk/impl/recording/SignatureValueGenerator;
	public final fun getState ()Lio/mockk/impl/recording/states/CallRecordingState;
	public final fun getStubRepo ()Lio/mockk/impl/stub/StubRepository;
	public fun hintNextReturnType (Lkotlin/reflect/KClass;I)V
	public fun isLastCallReturnsNothing ()Z
	public fun matcher (Lio/mockk/Matcher;Lkotlin/reflect/KClass;)Ljava/lang/Object;
	public fun nCalls ()I
	public fun reset ()V
	public fun round (II)V
	public final fun safeExec (Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public final fun setChildHinter (Lio/mockk/impl/recording/ChildHinter;)V
	public final fun setState (Lio/mockk/impl/recording/states/CallRecordingState;)V
	public fun startExclusion (Lio/mockk/MockKGateway$ExclusionParameters;)V
	public fun startStubbing ()V
	public fun startVerification (Lio/mockk/MockKGateway$VerificationParameters;)V
	public fun wasNotCalled (Ljava/util/List;)V
}

public final class io/mockk/impl/recording/CommonCallRecorder$Companion {
	public final fun getLog ()Lio/mockk/impl/log/Logger;
}

public final class io/mockk/impl/recording/CommonVerificationAcknowledger : io/mockk/MockKGateway$VerificationAcknowledger {
	public fun <init> (Lio/mockk/impl/stub/StubRepository;Lio/mockk/impl/log/SafeToString;)V
	public fun acknowledgeVerified (Ljava/lang/Object;Z)V
	public fun acknowledgeVerified (Z)V
	public fun checkUnnecessaryStub ()V
	public fun checkUnnecessaryStub (Ljava/lang/Object;)V
	public final fun getSafeToString ()Lio/mockk/impl/log/SafeToString;
	public final fun getStubRepo ()Lio/mockk/impl/stub/StubRepository;
	public fun markCallVerified (Lio/mockk/Invocation;)V
}

public final class io/mockk/impl/recording/JvmAutoHinter : io/mockk/impl/recording/AutoHinter {
	public static final field Companion Lio/mockk/impl/recording/JvmAutoHinter$Companion;
	public fun <init> ()V
	public fun autoHint (Lio/mockk/MockKGateway$CallRecorder;IILkotlin/jvm/functions/Function0;)V
	public final fun getChildTypes ()Ljava/util/Map;
}

public final class io/mockk/impl/recording/JvmAutoHinter$Companion {
	public final fun getExceptionMessage ()Lkotlin/text/Regex;
	public final fun getLog ()Lio/mockk/impl/log/Logger;
}

public final class io/mockk/impl/recording/JvmSignatureValueGenerator : io/mockk/impl/recording/SignatureValueGenerator {
	public fun <init> (Ljava/util/Random;)V
	public final fun getRnd ()Ljava/util/Random;
	public fun signatureValue (Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function0;Lio/mockk/impl/instantiation/AbstractInstantiator;)Ljava/lang/Object;
}

public final class io/mockk/impl/recording/PermanentMocker {
	public fun <init> (Lio/mockk/impl/stub/StubRepository;Lio/mockk/impl/log/SafeToString;)V
	public final fun getCallRef ()Ljava/util/Map;
	public final fun getLog ()Lio/mockk/impl/log/Logger;
	public final fun getPermanentMocks ()Ljava/util/Map;
	public final fun getSafeToString ()Lio/mockk/impl/log/SafeToString;
	public final fun getStubRepo ()Lio/mockk/impl/stub/StubRepository;
	public final fun mock (Ljava/util/List;)Ljava/util/List;
}

public final class io/mockk/impl/recording/SignatureMatcherDetector {
	public fun <init> (Lio/mockk/impl/log/SafeToString;Lkotlin/jvm/functions/Function0;)V
	public final fun detect (Ljava/util/List;)V
	public final fun getCalls ()Ljava/util/List;
	public final fun getChainedCallDetectorFactory ()Lkotlin/jvm/functions/Function0;
	public final fun getLog ()Lio/mockk/impl/log/Logger;
}

public abstract interface class io/mockk/impl/recording/SignatureValueGenerator {
	public abstract fun signatureValue (Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function0;Lio/mockk/impl/instantiation/AbstractInstantiator;)Ljava/lang/Object;
}

public final class io/mockk/impl/recording/SignedCall {
	public fun <init> (Ljava/lang/Object;ZLkotlin/reflect/KClass;Ljava/lang/Object;Lio/mockk/MethodDescription;Ljava/util/List;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/Object;
	public final fun component2 ()Z
	public final fun component3 ()Lkotlin/reflect/KClass;
	public final fun component4 ()Ljava/lang/Object;
	public final fun component5 ()Lio/mockk/MethodDescription;
	public final fun component6 ()Ljava/util/List;
	public final fun component7 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/Object;ZLkotlin/reflect/KClass;Ljava/lang/Object;Lio/mockk/MethodDescription;Ljava/util/List;Ljava/lang/String;)Lio/mockk/impl/recording/SignedCall;
	public static synthetic fun copy$default (Lio/mockk/impl/recording/SignedCall;Ljava/lang/Object;ZLkotlin/reflect/KClass;Ljava/lang/Object;Lio/mockk/MethodDescription;Ljava/util/List;Ljava/lang/String;ILjava/lang/Object;)Lio/mockk/impl/recording/SignedCall;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getArgs ()Ljava/util/List;
	public final fun getInvocationStr ()Ljava/lang/String;
	public final fun getMethod ()Lio/mockk/MethodDescription;
	public final fun getRetType ()Lkotlin/reflect/KClass;
	public final fun getRetValue ()Ljava/lang/Object;
	public final fun getSelf ()Ljava/lang/Object;
	public fun hashCode ()I
	public final fun isRetValueMock ()Z
	public fun toString ()Ljava/lang/String;
}

public final class io/mockk/impl/recording/SignedMatcher {
	public fun <init> (Lio/mockk/Matcher;Ljava/lang/Object;)V
	public final fun component1 ()Lio/mockk/Matcher;
	public final fun component2 ()Ljava/lang/Object;
	public final fun copy (Lio/mockk/Matcher;Ljava/lang/Object;)Lio/mockk/impl/recording/SignedMatcher;
	public static synthetic fun copy$default (Lio/mockk/impl/recording/SignedMatcher;Lio/mockk/Matcher;Ljava/lang/Object;ILjava/lang/Object;)Lio/mockk/impl/recording/SignedMatcher;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMatcher ()Lio/mockk/Matcher;
	public final fun getSignature ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/mockk/impl/recording/VerificationCallSorter {
	public field regularCalls Ljava/util/List;
	public field wasNotCalledCalls Ljava/util/List;
	public fun <init> ()V
	public final fun getRegularCalls ()Ljava/util/List;
	public final fun getWasNotCalledCalls ()Ljava/util/List;
	public final fun setRegularCalls (Ljava/util/List;)V
	public final fun setWasNotCalledCalls (Ljava/util/List;)V
	public final fun sort (Ljava/util/List;)V
}

public final class io/mockk/impl/recording/WasNotCalled {
	public static final field INSTANCE Lio/mockk/impl/recording/WasNotCalled;
	public final fun getMethod ()Lio/mockk/MethodDescription;
}

public class io/mockk/impl/recording/states/AnsweringState : io/mockk/impl/recording/states/CallRecordingState {
	public fun <init> (Lio/mockk/impl/recording/CommonCallRecorder;)V
	public fun call (Lio/mockk/Invocation;)Ljava/lang/Object;
	public fun getLog ()Lio/mockk/impl/log/Logger;
	public fun startStubbing ()Lio/mockk/impl/recording/states/CallRecordingState;
	public fun startVerification (Lio/mockk/MockKGateway$VerificationParameters;)Lio/mockk/impl/recording/states/CallRecordingState;
}

public abstract class io/mockk/impl/recording/states/CallRecordingState {
	public fun <init> (Lio/mockk/impl/recording/CommonCallRecorder;)V
	public fun answerOpportunity ()Lio/mockk/MockKGateway$AnswerOpportunity;
	public fun call (Lio/mockk/Invocation;)Ljava/lang/Object;
	public fun discardLastCallRound ()V
	public fun estimateCallRounds ()I
	public final fun getRecorder ()Lio/mockk/impl/recording/CommonCallRecorder;
	public fun isLastCallReturnsNothing ()Z
	public fun matcher (Lio/mockk/Matcher;Lkotlin/reflect/KClass;)Ljava/lang/Object;
	public fun nCalls ()I
	public fun recordingDone ()Lio/mockk/impl/recording/states/CallRecordingState;
	public fun round (II)V
	public fun startStubbing ()Lio/mockk/impl/recording/states/CallRecordingState;
	public fun startVerification (Lio/mockk/MockKGateway$VerificationParameters;)Lio/mockk/impl/recording/states/CallRecordingState;
	public fun wasNotCalled (Ljava/util/List;)V
}

public final class io/mockk/impl/recording/states/ExclusionState : io/mockk/impl/recording/states/RecordingState {
	public static final field Companion Lio/mockk/impl/recording/states/ExclusionState$Companion;
	public fun <init> (Lio/mockk/impl/recording/CommonCallRecorder;Lio/mockk/MockKGateway$ExclusionParameters;)V
	public final fun getParams ()Lio/mockk/MockKGateway$ExclusionParameters;
	public fun recordingDone ()Lio/mockk/impl/recording/states/CallRecordingState;
	public fun wasNotCalled (Ljava/util/List;)V
}

public final class io/mockk/impl/recording/states/ExclusionState$Companion {
	public final fun getLog ()Lio/mockk/impl/log/Logger;
}

public abstract class io/mockk/impl/recording/states/RecordingState : io/mockk/impl/recording/states/CallRecordingState {
	public fun <init> (Lio/mockk/impl/recording/CommonCallRecorder;)V
	protected final fun addWasNotCalled (Ljava/util/List;)V
	public fun call (Lio/mockk/Invocation;)Ljava/lang/Object;
	public fun discardLastCallRound ()V
	public fun estimateCallRounds ()I
	public final fun getLog ()Lio/mockk/impl/log/Logger;
	public fun isLastCallReturnsNothing ()Z
	public fun matcher (Lio/mockk/Matcher;Lkotlin/reflect/KClass;)Ljava/lang/Object;
	public final fun mockPermanently ()V
	public fun nCalls ()I
	public fun round (II)V
}

public final class io/mockk/impl/recording/states/SafeLoggingState : io/mockk/impl/recording/states/CallRecordingState {
	public fun <init> (Lio/mockk/impl/recording/CommonCallRecorder;)V
	public fun call (Lio/mockk/Invocation;)Ljava/lang/Object;
}

public final class io/mockk/impl/recording/states/StubbingAwaitingAnswerState : io/mockk/impl/recording/states/CallRecordingState {
	public fun <init> (Lio/mockk/impl/recording/CommonCallRecorder;)V
	public fun answerOpportunity ()Lio/mockk/MockKGateway$AnswerOpportunity;
	public final fun getLog ()Lio/mockk/impl/log/Logger;
}

public final class io/mockk/impl/recording/states/StubbingState : io/mockk/impl/recording/states/RecordingState {
	public fun <init> (Lio/mockk/impl/recording/CommonCallRecorder;)V
	public fun recordingDone ()Lio/mockk/impl/recording/states/CallRecordingState;
}

public final class io/mockk/impl/recording/states/VerifyingState : io/mockk/impl/recording/states/RecordingState {
	public static final field Companion Lio/mockk/impl/recording/states/VerifyingState$Companion;
	public fun <init> (Lio/mockk/impl/recording/CommonCallRecorder;Lio/mockk/MockKGateway$VerificationParameters;)V
	public final fun getParams ()Lio/mockk/MockKGateway$VerificationParameters;
	public fun recordingDone ()Lio/mockk/impl/recording/states/CallRecordingState;
	public fun wasNotCalled (Ljava/util/List;)V
}

public final class io/mockk/impl/recording/states/VerifyingState$Companion {
	public final fun getLog ()Lio/mockk/impl/log/Logger;
}

public final class io/mockk/impl/stub/AnswerAnsweringOpportunity : io/mockk/Answer, io/mockk/MockKGateway$AnswerOpportunity {
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public fun answer (Lio/mockk/Call;)Ljava/lang/Object;
	public fun coAnswer (Lio/mockk/Call;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun onFirstAnswer (Lkotlin/jvm/functions/Function1;)V
	public fun provideAnswer (Lio/mockk/Answer;)V
}

public final class io/mockk/impl/stub/CommonClearer : io/mockk/MockKGateway$Clearer {
	public fun <init> (Lio/mockk/impl/stub/StubRepository;Lio/mockk/impl/log/SafeToString;)V
	public fun clear ([Ljava/lang/Object;Lio/mockk/MockKGateway$ClearOptions;)V
	public fun clearAll (Lio/mockk/MockKGateway$ClearOptions;)V
	public final fun getLog ()Lio/mockk/impl/log/Logger;
	public final fun getSafeToString ()Lio/mockk/impl/log/SafeToString;
	public final fun getStubRepository ()Lio/mockk/impl/stub/StubRepository;
}

public final class io/mockk/impl/stub/ConstructorStub : io/mockk/impl/stub/Stub {
	public fun <init> (Ljava/lang/Object;Ljava/lang/Object;Lio/mockk/impl/stub/Stub;Z)V
	public fun addAnswer (Lio/mockk/InvocationMatcher;Lio/mockk/Answer;)V
	public fun allRecordedCalls ()Ljava/util/List;
	public fun allRecordedCalls (Lio/mockk/MethodDescription;)Ljava/util/List;
	public fun answer (Lio/mockk/Invocation;)Ljava/lang/Object;
	public fun childMockK (Lio/mockk/InvocationMatcher;Lkotlin/reflect/KClass;)Ljava/lang/Object;
	public fun clear (Lio/mockk/MockKGateway$ClearOptions;)V
	public fun dispose ()V
	public fun excludeRecordedCalls (Lio/mockk/MockKGateway$ExclusionParameters;Lio/mockk/InvocationMatcher;)V
	public final fun getMock ()Ljava/lang/Object;
	public fun getName ()Ljava/lang/String;
	public final fun getRecordPrivateCalls ()Z
	public final fun getRepresentativeMock ()Ljava/lang/Object;
	public final fun getStub ()Lio/mockk/impl/stub/Stub;
	public fun getType ()Lkotlin/reflect/KClass;
	public fun handleInvocation (Ljava/lang/Object;Lio/mockk/MethodDescription;Lkotlin/jvm/functions/Function0;[Ljava/lang/Object;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public fun markCallVerified (Lio/mockk/Invocation;)V
	public fun matcherUsages ()Ljava/util/Map;
	public fun recordCall (Lio/mockk/Invocation;)V
	public fun stdObjectAnswer (Lio/mockk/Invocation;)Ljava/lang/Object;
	public fun toStr ()Ljava/lang/String;
	public fun verifiedCalls ()Ljava/util/List;
}

public class io/mockk/impl/stub/MockKStub : io/mockk/impl/stub/Stub {
	public static final field Companion Lio/mockk/impl/stub/MockKStub$Companion;
	public field hashCodeStr Ljava/lang/String;
	public fun <init> (Lkotlin/reflect/KClass;Ljava/lang/String;ZZLio/mockk/impl/stub/StubGatewayAccess;ZLio/mockk/impl/stub/MockType;)V
	public synthetic fun <init> (Lkotlin/reflect/KClass;Ljava/lang/String;ZZLio/mockk/impl/stub/StubGatewayAccess;ZLio/mockk/impl/stub/MockType;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun addAnswer (Lio/mockk/InvocationMatcher;Lio/mockk/Answer;)V
	protected final fun allEqMatcher (Lio/mockk/Invocation;)Lio/mockk/InvocationMatcher;
	public fun allRecordedCalls ()Ljava/util/List;
	public fun allRecordedCalls (Lio/mockk/MethodDescription;)Ljava/util/List;
	public fun answer (Lio/mockk/Invocation;)Ljava/lang/Object;
	public fun childMockK (Lio/mockk/InvocationMatcher;Lkotlin/reflect/KClass;)Ljava/lang/Object;
	public fun clear (Lio/mockk/MockKGateway$ClearOptions;)V
	protected fun defaultAnswer (Lio/mockk/Invocation;)Ljava/lang/Object;
	public fun dispose ()V
	public fun excludeRecordedCalls (Lio/mockk/MockKGateway$ExclusionParameters;Lio/mockk/InvocationMatcher;)V
	public final fun getDisposeRoutine ()Lkotlin/jvm/functions/Function0;
	public final fun getGatewayAccess ()Lio/mockk/impl/stub/StubGatewayAccess;
	public final fun getHashCodeStr ()Ljava/lang/String;
	public final fun getLog ()Lio/mockk/impl/log/Logger;
	public final fun getMockType ()Lio/mockk/impl/stub/MockType;
	public fun getName ()Ljava/lang/String;
	public final fun getRecordPrivateCalls ()Z
	public final fun getRelaxUnitFun ()Z
	public final fun getRelaxed ()Z
	public fun getType ()Lkotlin/reflect/KClass;
	public fun handleInvocation (Ljava/lang/Object;Lio/mockk/MethodDescription;Lkotlin/jvm/functions/Function0;[Ljava/lang/Object;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public fun markCallVerified (Lio/mockk/Invocation;)V
	public fun matcherUsages ()Ljava/util/Map;
	public fun recordCall (Lio/mockk/Invocation;)V
	public final fun setDisposeRoutine (Lkotlin/jvm/functions/Function0;)V
	public final fun setHashCodeStr (Ljava/lang/String;)V
	public fun stdObjectAnswer (Lio/mockk/Invocation;)Ljava/lang/Object;
	protected final fun stdObjectFunctions (Ljava/lang/Object;Lio/mockk/MethodDescription;Ljava/util/List;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public fun toStr ()Ljava/lang/String;
	public fun verifiedCalls ()Ljava/util/List;
}

public final class io/mockk/impl/stub/MockKStub$Companion {
	public final fun getChildOfRegex ()Lkotlin/text/Regex;
}

public final class io/mockk/impl/stub/MockType : java/lang/Enum {
	public static final field CONSTRUCTOR Lio/mockk/impl/stub/MockType;
	public static final field OBJECT Lio/mockk/impl/stub/MockType;
	public static final field REGULAR Lio/mockk/impl/stub/MockType;
	public static final field SPY Lio/mockk/impl/stub/MockType;
	public static final field STATIC Lio/mockk/impl/stub/MockType;
	public static final field TEMPORARY Lio/mockk/impl/stub/MockType;
	public static fun valueOf (Ljava/lang/String;)Lio/mockk/impl/stub/MockType;
	public static fun values ()[Lio/mockk/impl/stub/MockType;
}

public final class io/mockk/impl/stub/SpyKStub : io/mockk/impl/stub/MockKStub {
	public fun <init> (Lkotlin/reflect/KClass;Ljava/lang/String;Lio/mockk/impl/stub/StubGatewayAccess;ZLio/mockk/impl/stub/MockType;)V
}

public abstract interface class io/mockk/impl/stub/Stub : io/mockk/impl/platform/Disposable {
	public abstract fun addAnswer (Lio/mockk/InvocationMatcher;Lio/mockk/Answer;)V
	public abstract fun allRecordedCalls ()Ljava/util/List;
	public abstract fun allRecordedCalls (Lio/mockk/MethodDescription;)Ljava/util/List;
	public abstract fun answer (Lio/mockk/Invocation;)Ljava/lang/Object;
	public abstract fun childMockK (Lio/mockk/InvocationMatcher;Lkotlin/reflect/KClass;)Ljava/lang/Object;
	public abstract fun clear (Lio/mockk/MockKGateway$ClearOptions;)V
	public abstract fun excludeRecordedCalls (Lio/mockk/MockKGateway$ExclusionParameters;Lio/mockk/InvocationMatcher;)V
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getType ()Lkotlin/reflect/KClass;
	public abstract fun handleInvocation (Ljava/lang/Object;Lio/mockk/MethodDescription;Lkotlin/jvm/functions/Function0;[Ljava/lang/Object;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public abstract fun markCallVerified (Lio/mockk/Invocation;)V
	public abstract fun matcherUsages ()Ljava/util/Map;
	public abstract fun recordCall (Lio/mockk/Invocation;)V
	public abstract fun stdObjectAnswer (Lio/mockk/Invocation;)Ljava/lang/Object;
	public abstract fun toStr ()Ljava/lang/String;
	public abstract fun verifiedCalls ()Ljava/util/List;
}

public final class io/mockk/impl/stub/StubGatewayAccess {
	public fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lio/mockk/impl/stub/StubRepository;Lio/mockk/impl/log/SafeToString;Lio/mockk/MockKGateway$MockFactory;)V
	public synthetic fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lio/mockk/impl/stub/StubRepository;Lio/mockk/impl/log/SafeToString;Lio/mockk/MockKGateway$MockFactory;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lkotlin/jvm/functions/Function0;
	public final fun component2 ()Lkotlin/jvm/functions/Function0;
	public final fun component3 ()Lio/mockk/impl/stub/StubRepository;
	public final fun component4 ()Lio/mockk/impl/log/SafeToString;
	public final fun component5 ()Lio/mockk/MockKGateway$MockFactory;
	public final fun copy (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lio/mockk/impl/stub/StubRepository;Lio/mockk/impl/log/SafeToString;Lio/mockk/MockKGateway$MockFactory;)Lio/mockk/impl/stub/StubGatewayAccess;
	public static synthetic fun copy$default (Lio/mockk/impl/stub/StubGatewayAccess;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lio/mockk/impl/stub/StubRepository;Lio/mockk/impl/log/SafeToString;Lio/mockk/MockKGateway$MockFactory;ILjava/lang/Object;)Lio/mockk/impl/stub/StubGatewayAccess;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAnyValueGenerator ()Lkotlin/jvm/functions/Function0;
	public final fun getCallRecorder ()Lkotlin/jvm/functions/Function0;
	public final fun getMockFactory ()Lio/mockk/MockKGateway$MockFactory;
	public final fun getSafeToString ()Lio/mockk/impl/log/SafeToString;
	public final fun getStubRepository ()Lio/mockk/impl/stub/StubRepository;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/mockk/impl/stub/StubRepository {
	public fun <init> (Lio/mockk/impl/log/SafeToString;)V
	public final fun add (Ljava/lang/Object;Lio/mockk/impl/stub/Stub;)V
	public final fun get (Ljava/lang/Object;)Lio/mockk/impl/stub/Stub;
	public final fun getAllStubs ()Ljava/util/List;
	public final fun getSafeToString ()Lio/mockk/impl/log/SafeToString;
	public final fun notifyCallRecorded (Lio/mockk/impl/stub/MockKStub;)V
	public final fun openRecordCallAwaitSession (Ljava/util/List;J)Lio/mockk/impl/MultiNotifier$Session;
	public final fun remove (Ljava/lang/Object;)Lio/mockk/impl/stub/Stub;
	public final fun stubFor (Ljava/lang/Object;)Lio/mockk/impl/stub/Stub;
}

public final class io/mockk/impl/verify/AllCallsCallVerifier : io/mockk/impl/verify/UnorderedCallVerifier {
	public fun <init> (Lio/mockk/impl/stub/StubRepository;Lio/mockk/impl/log/SafeToString;)V
	public fun verify (Ljava/util/List;Lio/mockk/MockKGateway$VerificationParameters;)Lio/mockk/MockKGateway$VerificationResult;
}

public final class io/mockk/impl/verify/LCSMatchingAlgo {
	public fun <init> (Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/util/List;Ljava/util/List;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getAllCalls ()Ljava/util/List;
	public final fun getVerifiedCalls ()Ljava/util/List;
	public final fun getVerifiedMatchers ()Ljava/util/List;
	public final fun lcs ()Z
}

public final class io/mockk/impl/verify/OrderedCallVerifier : io/mockk/MockKGateway$CallVerifier {
	public fun <init> (Lio/mockk/impl/stub/StubRepository;Lio/mockk/impl/log/SafeToString;)V
	public fun captureArguments ()V
	public final fun getSafeToString ()Lio/mockk/impl/log/SafeToString;
	public final fun getStubRepo ()Lio/mockk/impl/stub/StubRepository;
	public fun verify (Ljava/util/List;Lio/mockk/MockKGateway$VerificationParameters;)Lio/mockk/MockKGateway$VerificationResult;
}

public final class io/mockk/impl/verify/SequenceCallVerifier : io/mockk/MockKGateway$CallVerifier {
	public fun <init> (Lio/mockk/impl/stub/StubRepository;Lio/mockk/impl/log/SafeToString;)V
	public fun captureArguments ()V
	public final fun getSafeToString ()Lio/mockk/impl/log/SafeToString;
	public final fun getStubRepo ()Lio/mockk/impl/stub/StubRepository;
	public fun verify (Ljava/util/List;Lio/mockk/MockKGateway$VerificationParameters;)Lio/mockk/MockKGateway$VerificationResult;
}

public final class io/mockk/impl/verify/TimeoutVerifier : io/mockk/MockKGateway$CallVerifier {
	public fun <init> (Lio/mockk/impl/stub/StubRepository;Lio/mockk/MockKGateway$CallVerifier;)V
	public fun captureArguments ()V
	public final fun getStubRepo ()Lio/mockk/impl/stub/StubRepository;
	public final fun getVerifierChain ()Lio/mockk/MockKGateway$CallVerifier;
	public fun verify (Ljava/util/List;Lio/mockk/MockKGateway$VerificationParameters;)Lio/mockk/MockKGateway$VerificationResult;
}

public class io/mockk/impl/verify/UnorderedCallVerifier : io/mockk/MockKGateway$CallVerifier {
	public fun <init> (Lio/mockk/impl/stub/StubRepository;Lio/mockk/impl/log/SafeToString;)V
	public fun captureArguments ()V
	public final fun getSafeToString ()Lio/mockk/impl/log/SafeToString;
	public final fun getStubRepo ()Lio/mockk/impl/stub/StubRepository;
	public fun verify (Ljava/util/List;Lio/mockk/MockKGateway$VerificationParameters;)Lio/mockk/MockKGateway$VerificationResult;
}

public final class io/mockk/impl/verify/VerificationHelpers {
	public static final field INSTANCE Lio/mockk/impl/verify/VerificationHelpers;
	public final fun allInvocations (Ljava/util/List;Lio/mockk/impl/stub/StubRepository;)Ljava/util/List;
	public final fun formatCalls (Ljava/util/List;Ljava/util/List;)Ljava/lang/String;
	public static synthetic fun formatCalls$default (Lio/mockk/impl/verify/VerificationHelpers;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Ljava/lang/String;
	public final fun reportCalls (Ljava/util/List;Ljava/util/List;Lio/mockk/impl/verify/LCSMatchingAlgo;)Ljava/lang/String;
	public static synthetic fun reportCalls$default (Lio/mockk/impl/verify/VerificationHelpers;Ljava/util/List;Ljava/util/List;Lio/mockk/impl/verify/LCSMatchingAlgo;ILjava/lang/Object;)Ljava/lang/String;
	public final fun stackTrace (ILjava/util/List;)Ljava/lang/String;
	public final fun stackTraces (Ljava/util/List;)Ljava/lang/String;
}

public final class io/mockk/junit4/MockKRule : org/junit/rules/TestWatcher, org/junit/rules/TestRule {
	public fun <init> (Ljava/lang/Object;)V
}

public final class io/mockk/junit5/MockKExtension : org/junit/jupiter/api/extension/AfterAllCallback, org/junit/jupiter/api/extension/ParameterResolver, org/junit/jupiter/api/extension/TestInstancePostProcessor {
	public static final field CHECK_UNNECESSARY_STUB_PROPERTY Ljava/lang/String;
	public static final field CONFIRM_VERIFICATION_PROPERTY Ljava/lang/String;
	public static final field Companion Lio/mockk/junit5/MockKExtension$Companion;
	public static final field KEEP_MOCKS_PROPERTY Ljava/lang/String;
	public fun <init> ()V
	public fun afterAll (Lorg/junit/jupiter/api/extension/ExtensionContext;)V
	public fun postProcessTestInstance (Ljava/lang/Object;Lorg/junit/jupiter/api/extension/ExtensionContext;)V
	public fun resolveParameter (Lorg/junit/jupiter/api/extension/ParameterContext;Lorg/junit/jupiter/api/extension/ExtensionContext;)Ljava/lang/Object;
	public fun supportsParameter (Lorg/junit/jupiter/api/extension/ParameterContext;Lorg/junit/jupiter/api/extension/ExtensionContext;)Z
}

public abstract interface annotation class io/mockk/junit5/MockKExtension$CheckUnnecessaryStub : java/lang/annotation/Annotation {
}

public final class io/mockk/junit5/MockKExtension$Companion {
}

public abstract interface annotation class io/mockk/junit5/MockKExtension$ConfirmVerification : java/lang/annotation/Annotation {
}

public abstract interface annotation class io/mockk/junit5/MockKExtension$KeepMocks : java/lang/annotation/Annotation {
}

